From 34269016c3d438e2f84119c779ebdcf032307ed4 Mon Sep 17 00:00:00 2001
From: Bruce Leidl <bruce@subgraph.com>
Date: Fri, 27 May 2022 15:06:26 -0400
Subject: [PATCH] Add options for Citadel and disabling GOA/CUPS

---
 meson.build                   | 14 ++++++++++++++
 meson_options.txt             |  5 +++++
 panels/background/meson.build |  4 +++-
 panels/meson.build            | 23 ++++++++++++++++-------
 shell/cc-panel-list.c         | 14 ++++++++++++++
 shell/cc-panel-loader.c       | 28 ++++++++++++++++++++++++++++
 tests/meson.build             |  2 +-
 7 files changed, 81 insertions(+), 9 deletions(-)

diff --git a/meson.build b/meson.build
index 09aa30f..7835bc7 100644
--- a/meson.build
+++ b/meson.build
@@ -99,6 +99,15 @@ libgvc = subproject(
 )
 libgvc_dep = libgvc.get_variable('libgvc_dep')
 
+enable_goa = get_option('online_accounts')
+enable_cups = get_option('cups')
+enable_user_accounts = get_option('user_accounts')
+enable_citadel = get_option('citadel')
+config_h.set('WITH_GOA', enable_goa, description: 'Define to enable support for Gnome Online Accounts')
+config_h.set('WITH_CUPS', enable_goa, description: 'Define to enable support for CUPS')
+config_h.set('WITH_USER_ACCOUNTS', enable_user_accounts, description: 'Define to enable user accounts panel')
+config_h.set('CITADEL', enable_citadel, description: 'Define to enable the removal of components unneeded in Citadel')
+
 goa_req_version = '>= 3.25.3'
 pulse_req_version = '>= 2.0'
 
@@ -118,7 +127,9 @@ gnome_desktop_dep = dependency('gnome-desktop-4')
 gnome_bg_dep = dependency('gnome-bg-4')
 gnome_rr_dep = dependency('gnome-rr-4')
 gnome_settings_dep = dependency('gnome-settings-daemon', version: '>= 41.0')
+if enable_goa
 goa_dep = dependency('goa-1.0', version: goa_req_version)
+endif
 gsettings_desktop_dep = dependency('gsettings-desktop-schemas', version: '>= 42.alpha')
 libxml_dep = dependency('libxml-2.0')
 pulse_dep = dependency('libpulse', version: pulse_req_version)
@@ -153,6 +164,8 @@ foreach polkit_file: polkit_files
 endforeach
 
 # Check for CUPS 1.4 or newer
+
+if enable_cups
 cups_dep = dependency('cups', version : '>= 1.4', required: false)
 assert(cups_dep.found(), 'CUPS 1.4 or newer not found')
 
@@ -175,6 +188,7 @@ endforeach
 config_h.set10('HAVE_CUPS_HTTPCONNECT2',
                cc.has_function('httpConnect2', dependencies: cups_dep),
                description: 'Define if httpConnect2() is available in CUPS')
+endif
 
 # IBus support
 enable_ibus = get_option('ibus')
diff --git a/meson_options.txt b/meson_options.txt
index dbca723..1f65b82 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -7,3 +7,8 @@ option('tracing', type: 'boolean', value: false, description: 'add extra debuggi
 option('wayland', type: 'boolean', value: true, description: 'build with Wayland support')
 option('profile', type: 'combo', choices: ['default','development'], value: 'default')
 option('malcontent', type: 'boolean', value: false, description: 'build with malcontent support')
+option('staging_dir', type: 'string', description: 'set staging directory for cross-compile')
+option('online_accounts', type: 'boolean', value: false, description: 'build with support for gnome-online-accounts')
+option('cups', type: 'boolean', value: false, description: 'build with support for CUPS')
+option('user_accounts', type: 'boolean', value: false, description: 'build with support for user accounts panel')
+option('citadel', type: 'boolean', value: true, description: 'build with Citadel support, which removes unneeded components')
diff --git a/panels/meson.build b/panels/meson.build
index 75941ed..b3fe923 100644
--- a/panels/meson.build
+++ b/panels/meson.build
@@ -1,12 +1,10 @@
 subdir('common')
 
 panels = [
-  'applications',
   'background',
   'camera',
   'color',
   'datetime',
-  'default-apps',
   'diagnostics',
   'display',
   'info-overview',
@@ -17,17 +15,12 @@ panels = [
   'mouse',
   'multitasking',
   'notifications',
-  'online-accounts',
   'power',
-  'printers',
   'region',
-  'removable-media',
   'search',
-  'sharing',
   'sound',
   'universal-access',
   'usage',
-  'user-accounts',
  'wwan',
 ]
 
@@ -43,6 +36,22 @@ if host_is_linux_not_s390
   ]
 endif
 
+if enable_goa
+  panels += ['online-accounts']
+endif
+
+if enable_cups
+  panels += ['printers']
+endif
+
+if enable_user_accounts
+  panels += ['user-accounts']
+endif
+
+if not enable_citadel
+  panel_names += ['applications', 'default-apps', 'removable-media', 'sharing']
+endif
+
 panels_list = []
 panels_libs = []
 foreach cappletname: panels
diff --git a/shell/cc-panel-list.c b/shell/cc-panel-list.c
index 6cbc16b..41d6722 100644
--- a/shell/cc-panel-list.c
+++ b/shell/cc-panel-list.c
@@ -385,10 +385,16 @@ static const gchar * const panel_order[] = {
   "notifications",
   "search",
   "multitasking",
+#ifndef CITADEL
   "applications",
+#endif
   "privacy",
+#ifndef WITH_GOA
   "online-accounts",
+#endif
+#ifndef CITADEL
   "sharing",
+#endif
 
   /* Privacy page */
   "location",
@@ -405,16 +411,24 @@ static const gchar * const panel_order[] = {
   "display",
   "mouse",
   "keyboard",
+#ifndef WITH_CUPS
   "printers",
+#endif
+#ifndef CITADEL
   "removable-media",
+#endif
   "wacom",
   "color",
 
   /* Details page */
   "region",
   "universal-access",
+#ifndef WITH_USER_ACCOUNTS
   "user-accounts",
+#endif
+#ifndef CITADEL
   "default-apps",
+#endif
   "reset-settings",
   "datetime",
   "info-overview",
diff --git a/shell/cc-panel-loader.c b/shell/cc-panel-loader.c
index 66c513e..97eea5b 100644
--- a/shell/cc-panel-loader.c
+++ b/shell/cc-panel-loader.c
@@ -31,14 +31,18 @@
 #ifndef CC_PANEL_LOADER_NO_GTYPES
 
 /* Extension points */
+#ifndef CITADEL
 extern GType cc_applications_panel_get_type (void);
+#endif
 extern GType cc_background_panel_get_type (void);
 #ifdef BUILD_BLUETOOTH
 extern GType cc_bluetooth_panel_get_type (void);
 #endif /* BUILD_BLUETOOTH */
 extern GType cc_color_panel_get_type (void);
 extern GType cc_date_time_panel_get_type (void);
+#ifndef CITADEL
 extern GType cc_default_apps_panel_get_type (void);
+#endif
 extern GType cc_display_panel_get_type (void);
 extern GType cc_info_overview_panel_get_type (void);
 extern GType cc_keyboard_panel_get_type (void);
@@ -49,19 +53,29 @@ extern GType cc_network_panel_get_type (void);
 extern GType cc_wifi_panel_get_type (void);
 #endif /* BUILD_NETWORK */
 extern GType cc_notifications_panel_get_type (void);
+#ifdef WITH_GOA
 extern GType cc_goa_panel_get_type (void);
+#endif
 extern GType cc_power_panel_get_type (void);
+#ifdef WITH_CUPS
 extern GType cc_printers_panel_get_type (void);
+#endif
 extern GType cc_region_panel_get_type (void);
+#ifndef CITADEL
 extern GType cc_removable_media_panel_get_type (void);
+#endif
 extern GType cc_search_panel_get_type (void);
+#ifndef CITADEL
 extern GType cc_sharing_panel_get_type (void);
+#endif
 extern GType cc_sound_panel_get_type (void);
 #ifdef BUILD_THUNDERBOLT
 extern GType cc_bolt_panel_get_type (void);
 #endif /* BUILD_THUNDERBOLT */
 extern GType cc_ua_panel_get_type (void);
+#ifdef WITH_USER_ACCOUNTS
 extern GType cc_user_panel_get_type (void);
+#endif
 #ifdef BUILD_WACOM
 extern GType cc_wacom_panel_get_type (void);
 #endif /* BUILD_WACOM */
@@ -97,7 +111,9 @@ extern void cc_wwan_panel_static_init_func (void);
 
 static CcPanelLoaderVtable default_panels[] =
 {
+#ifndef CITADEL
   PANEL_TYPE("applications",     cc_applications_panel_get_type,         NULL),
+#endif
   PANEL_TYPE("background",       cc_background_panel_get_type,           NULL),
 #ifdef BUILD_BLUETOOTH
   PANEL_TYPE("bluetooth",        cc_bluetooth_panel_get_type,            NULL),
@@ -105,7 +121,9 @@ static CcPanelLoaderVtable default_panels[] =
   PANEL_TYPE("camera",           cc_camera_panel_get_type,               NULL),
   PANEL_TYPE("color",            cc_color_panel_get_type,                NULL),
   PANEL_TYPE("datetime",         cc_date_time_panel_get_type,            NULL),
+#ifndef CITADEL
   PANEL_TYPE("default-apps",     cc_default_apps_panel_get_type,         NULL),
+#endif
   PANEL_TYPE("diagnostics",      cc_diagnostics_panel_get_type,          cc_diagnostics_panel_static_init_func),
   PANEL_TYPE("display",          cc_display_panel_get_type,              NULL),
   PANEL_TYPE("info-overview",    cc_info_overview_panel_get_type,        NULL),
@@ -120,20 +138,30 @@ static CcPanelLoaderVtable default_panels[] =
   PANEL_TYPE("wifi",             cc_wifi_panel_get_type,                 cc_wifi_panel_static_init_func),
 #endif
   PANEL_TYPE("notifications",    cc_notifications_panel_get_type,        NULL),
+#ifdef WITH_GOA
   PANEL_TYPE("online-accounts",  cc_goa_panel_get_type,                  NULL),
+#endif
   PANEL_TYPE("power",            cc_power_panel_get_type,                NULL),
+#ifdef WITH_CUPS
   PANEL_TYPE("printers",         cc_printers_panel_get_type,             NULL),
+#endif
   PANEL_TYPE("region",           cc_region_panel_get_type,               NULL),
+#ifndef CITADEL
   PANEL_TYPE("removable-media",  cc_removable_media_panel_get_type,      NULL),
+#endif
   PANEL_TYPE("search",           cc_search_panel_get_type,               NULL),
+#ifndef CITADEL
   PANEL_TYPE("sharing",          cc_sharing_panel_get_type,              NULL),
+#endif
   PANEL_TYPE("sound",            cc_sound_panel_get_type,                NULL),
 #ifdef BUILD_THUNDERBOLT
   PANEL_TYPE("thunderbolt",      cc_bolt_panel_get_type,                 NULL),
 #endif
   PANEL_TYPE("universal-access", cc_ua_panel_get_type,                   NULL),
   PANEL_TYPE("usage",            cc_usage_panel_get_type,                NULL),
+#ifdef WITH_USER_ACCOUNTS
   PANEL_TYPE("user-accounts",    cc_user_panel_get_type,                 NULL),
+#endif
 #ifdef BUILD_WACOM
   PANEL_TYPE("wacom",            cc_wacom_panel_get_type,                cc_wacom_panel_static_init_func),
 #endif
diff --git a/tests/meson.build b/tests/meson.build
index d4fe361..b879160 100644
--- a/tests/meson.build
+++ b/tests/meson.build
@@ -6,5 +6,5 @@ endif
 
 subdir('interactive-panels')
 
-subdir('printers')
+#subdir('printers')
 subdir('info')
